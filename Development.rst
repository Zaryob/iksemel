.. _Development:

***********
Development
***********

This chapter contains information on plan, procedure and standarts of
iksemel development.

Roadmap
=======

There are three main functions iksemel tries to provide to applications:

* 
  A generic XML parser with SAX and DOM interfaces.
* 
  XML stream client and server functionality.
* 
  Utilities for Jabber clients.

Goal of the iksemel is providing these functions while supporting embedded
environments, keeping usage simple, and having a robust implementation.

Some decisions are made to reach this goal:

Code is written in ANSI C with a single dependency on C library. Instead of
using expat or libxml, a simple built-in parser is used. Similarly glib and
gnu only features of glibc (like object stacks) are avoided and built-in
memory and string utilities are used. This may seem like code duplication
but since they are optimized for iksemel and only a few kb in size,
it isn't a big disadvantage.

Code is placed files in a modular fashion, and different modules don't depend
on others' internal details. This allows taking unneeded functionality out when
building for low resource situations.

It is tried to give functions names which are consistent, clear and short.

API is documented with texinfo for high quality printed output and info file
output for fast and simple access during application development. Instead
of using an autogenerated system or simply listing function descriptions,
a task oriented tutorial approach is used.

Coding Style
============

Here is a short list describing preferred coding style for iksemel.
Please keep in mind when sending patches.

* 
  Indentation is done with tabs. Aligning is done with spaces.
* 
  Placement of braces is K&R style.
* 
  Function names are put at the start of line.
* 
  Function names are lowercase.
* 
  Words of the function names are separated with underscore character.
* 
  Structure and variable names are lowercase.
* 
  Macro and enumarations names are uppercase.
* 
  Exported library API is contained in the single iksemel.h file.
* 
  Exported function names start with iks_
* 
  Exported structure and type names start with iks
* 
  Exported macro and enumaration names start with IKS_

Here is an example:


::

  int
  iks_new_func (char *text)
  {
      int i;

      i = an_internal_func (text);
      if (IKS_SOME_VALUE == i) {
          iks_some_func (text);
          i++;
      }
      return i;
  }
  

Resources
=========


* 
  RFC 2279, UTF-8 format `http://www.ietf.org/rfc/rfc2279.txt <http://www.ietf.org/rfc/rfc2279.txt>`_
* 
  W3C Recommendation, Extensible Markup Language 1.0 `http://www.w3.org/TR/REC-xml <http://www.w3.org/TR/REC-xml>`_
* 
  Annotated XML Specification `http://www.xml.com/axml/testaxml.htm <http://www.xml.com/axml/testaxml.htm>`_
* 
  Jabber Protocol Documents `http://www.jabber.org/protocol/ <http://www.jabber.org/protocol/>`_

@comment ============================================================

.. _Datatype_Index:

Datatype Index
~~~~~~~~~~~~~~

@printindex tp

Function Index
~~~~~~~~~~~~~~

@printindex fn

@contents

